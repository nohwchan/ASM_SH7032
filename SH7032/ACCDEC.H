		;**********************
		; ACC/DEC PROCESS
		;**********************
		MOV	FRUN_1,R1
		MOV.W	@R1,R0		;GET FRUN
		MOV	FSET_1,R2
		MOV.W	@R2,R2		;GET FSET
		CMP/GT	R2,R0		;CMP IF FRUN(R0) > FSET (R2)
		BT	DEC_SET		;JMP DECEL PROC.
		CMP/EQ  R2,R0
		BF	SET_ACC		
		BRA	OUT_ACCDEC
		NOP
S_SHAPE:	
		BRA	S_SHAPE1
		NOP
SET_ACC:
		MOV	QSTATUS2,R10
		MOV.B	@R10,R0
		TST	#B'100,R0	;IF JOG FLAG NOT SET 
		BT	NOT_JOG		;THEN CHECK SOFT FLAG CONTINUE
		MOV	ACCJTIM,R2	;ELSE USE ACC JOG TIME
		MOV.W	@R2,R2
		BRA	JOG_JMP
		NOP
NOT_JOG:
		TST	#B'1000,R0	;IF SOFT FLAG NOT SET
		BT	NOT_SOFT	;THEN USE NORMAL ACC TIME
		MOV	ACC2TIM,R2	;ELSE USE ACC SOFT TIME
		MOV	@R2,R2
		BRA	JOG_JMP
		NOP
NOT_SOFT:
		MOV	ACCTIM,R2
		MOV	@R2,R2		;GET ACC_TIM
JOG_JMP:
		MOV	SYSFLG_1,R3
		MOV.B	@R3,R0
		AND	#B'11011111,R0	;CLR ACCDEC  FLAG(0=ACC)
		MOV.B	R0,@R3

		MOV	RSTATUS,R3
		MOV.B	@R3,R0
		AND	#B'11111011,R0	;CLR STEADY STATE FLG
		MOV.B	R0,@R3

		BRA	CAL_STEP	;JMP TO CAL. FREQ. STEP
		NOP			

DEC_SET:			
		MOV	QSTATUS2,R10
		MOV.B	@R10,R0
		TST	#B'100,R0
		BT	NOT_JOG3
		MOV	DECJTIM,R2
		MOV.W	@R2,R2
		BRA	JOG_JMP3
		NOP

NOT_JOG3:
		TST	#B'1000,R0
		BT	NOT_SOFT3
		MOV	ACC2TIM,R2
		MOV	@R2,R2
		BRA	JOG_JMP3
		NOP
NOT_SOFT3:
		MOV	DECTIM,R2
		MOV.W	@R2,R2		;GET DEC_TIM
JOG_JMP3:
		MOV	SYSFLG_1,R3
		MOV.B	@R3,R0
		OR	#B'100000,R0	;SET ACCDEC FLAG(1=DEC)
		MOV.B	R0,@R3

		MOV	RSTATUS,R3
		MOV.B	@R3,R0
		AND	#B'11111011,R0	;CLR STEADY STATE FLG
		MOV.B	R0,@R3

CAL_STEP:
		MOV	#100,R0
		MULS	R0,R2		;R3=XXXTIM*100
		STS	MACL,R3
                MOV     R3,R4
		MOV	CONST1,R0
		DIVS	R0,R3		;R3=XXXTIM*100/CONST1
		MOV	STEPTIM,R0	
		MOV.W	R3,@R0		;STORE RESULT TO STEP_TIM
		MOV	CONST1,R0
		MULS	R3,R0		;CAL REMENDER=R2-(R3*CONST1)
		STS	MACL,R0
		SUB	R0,R4
		MOV	REMENDER,R0
		MOV.W	R4,@R0		;STORE REMENDER

		MOV	SYSFLG_1,R2
		MOV.B	@R2,R0
		TST	#B'100000,R0	;IF SYSFLG.4=1 JMP DEC_ACTION
		BT	N_DEC_ACT
		BRA	DEC_ACT
		NOP
N_DEC_ACT:		
		;ACCEL ACTION
		MOV.W	@R1,R0		;R1=ADDRESS OF FRUN R0=FRUN
;		CMP/EQ	#0,R0
;		BF	ACC_A1
;		MOV	START_F,R3
;		MOV.W	@R3,R0
;		CMP/GE	R0,R2
;		BT	LD_STF
;		MOV	R_STATUS1,R2
;		MOV.B	@R2,R0
;		OR	#B'100,R0
;		MOV.B	R0,@R2
;		BRA	TTT
;		NOP
;LD_STF:		MOV.W	@R3,R0		
;		MOV.W	R0,@R1
ACC_A1:

MOV SYSFLG_1,R0
ADD #1,R0
MOV.B @R0,R0
TST #B'100,R0
BF OK_ACC
MOV FRUN_1,R0           ;FIELD WEAK
MOV.W @R0,R0
MOV FR50,R2
CMP/GE R2,R0
BT  OK_ACC
;SOFT1-------------------BEGIN----------------------------
	MOV FLUX_COUNT1,R0
	MOV.B @R0,R0
	MOV #100,R2
	CMP/GE R2,R0
	BF  T1_P1
;SOFT1--------------------END-----------------------------
MOV IDCOM,R0
MOV @R0,R0
MOV IDEST,R2
MOV @R2,R2
SHAR R0
CMP/GE R0,R2
BT OK_ACC
;MOV P_DLY,R0
;MOV #0,R2
;MOV.W R2,@R0
BRA T1_P1;NOT_ACC
NOP
OK_ACC:
		MOV	RSTATUS,R2
		MOV.B	@R2,R0
		TST	#B'100,R0	;IF STEADY NOT ADD FRUN FOR STABLE DISP.
		BF	T1_P1

		MOV	QSTATUS2,R10
		MOV.B	@R10,R0
		TST	#B'100,R0
		BT	NOT_JOG1
		MOV	ACCJTIM,R2
		MOV.W	@R2,R0
		BRA	JOG_JMP1
		NOP
NOT_JOG1:
		TST	#B'1000,R0
		BT	NOT_SOFT1
		MOV	ACC2TIM,R2
		MOV	@R2,R0
		BRA	JOG_JMP1
		NOP
NOT_SOFT1:
		MOV	ACCTIM,R2
		MOV	@R2,R0
JOG_JMP1:
		MOV	#50,R2
		CMP/GT	R2,R0
		BT	CHK_MSEC;;;;

		MOV	QSTATUS2,R10
		MOV.B	@R10,R0
		TST	#B'100,R0
		BT	NOT_JOG2
		MOV	DELACCJ,R3
		MOV.B	@R3,R3
		BRA	JOG_JMP2
		NOP
NOT_JOG2:		
		TST	#B'1000,R0
		BT	NOT_SOFT2
		MOV	DELACC2,R3
		MOV.B	@R3,R3
		BRA	JOG_JMP2
		NOP
NOT_SOFT2:
		MOV	DELACC,R3	;ACC BELOW 5 SEC.
		MOV.B	@R3,R3
JOG_JMP2:
		MOV.W	@R1,R0		;R1=ADDRESS OF FRUN
		ADD	R3,R0
		MOV.W	R0,@R1		;UPDATE FRUN
		BRA	T1_P1
		NOP

CHK_MSEC:	MOV	M_MSEC,R3
		MOV.W	@R3,R5
		MOV	ACCREMEND,R4
		MOV.W	@R4,R2
		MOV	CONST1,R0
		CMP/GT	R0,R2
		BF	T_P1
		SUB	R0,R2
		MOV.W	R2,@R4
		ADD	#-1,R5
		MOV.W	R5,@R3
		BRA	T1_P1
		NOP

T_P1:		MOV	STEPTIM,R2
		MOV.W	@R2,R0
		MOV	M_MSEC,R3
		MOV.W	@R3,R3
		MOV	R3,R4
		DIVS	R0,R3
		MOV.W	@R2,R0
		MULS	R0,R3
		STS	MACL,R0
		SUB	R4,R0
		CMP/EQ	#0,R0
		BF	T1_P1

INC_FR:		MOV.W	@R1,R0
		ADD	#1,R0
		MOV.W	R0,@R1

		MOV	ACCREMEND,R2
		MOV.W	@R2,R0
		MOV	REMENDER,R3
		MOV.W	@R3,R3
		ADD	R0,R3
		MOV.W	R3,@R2

T1_P1:		MOV.W	@R1,R0
		MOV	FSET_1,R2
		MOV.W	@R2,R2
		CMP/GT	R2,R0
		BF	T1_P3          ;IF FRUN(R0)<FSET(R2) JMP
		MOV.W	R2,@R1

		MOV	RSTATUS,R2
		MOV.B	@R2,R0
		OR	#B'100,R0      ;SET STEADY STATE RUN FLG.
		MOV.B	R0,@R2
;		MOV	INCRE,R0
;		MOV	#0,R1
;		MOV	R1,@R0
		BRA	T1_P4
		NOP
				
DEC_ACT:
	
;MOV SYSFLG_1,R0
;ADD #1,R0
;MOV.B @R0,R0
;TST #B'10000,R0
;BF OK_DEC

;MOV IDCOM,R0
;MOV @R0,R0
;MOV IDEST,R2
;MOV @R2,R2
;CMP/EQ R0,R2
;BT OK_DEC
;BRA T1_P2;NOT_DEC
;NOP
OK_DEC:
		MOV	RSTATUS,R2
		MOV.B	@R2,R0
		TST	#B'100,R0	;IF STEADY NOT ADD FRUN FOR STABLE DISP.
		BF	T1_P2

		MOV	QSTATUS2,R10
		MOV.B	@R10,R0
		TST	#B'100,R0
		BT	NOT_JOG4
		MOV	DECJTIM,R2
		MOV.W	@R2,R0
		BRA	JOG_JMP4
		NOP
NOT_JOG4:
		TST	#B'1000,R0
		BT	NOT_SOFT4
		MOV	ACC2TIM,R2
		MOV	@R2,R0
		BRA	JOG_JMP4
		NOP
NOT_SOFT4:
		MOV	DECTIM,R2
		MOV.W	@R2,R0
JOG_JMP4:
		MOV	#50,R2
		CMP/GT	R2,R0
		BT	CHK_MSEC_D

		MOV	QSTATUS2,R10
		MOV.B	@R10,R0
		TST	#B'100,R0
		BT	NOT_JOG5
		MOV	DELDECJ,R3
		MOV.B	@R3,R3
		BRA	JOG_JMP5
		NOP
NOT_JOG5:		
		TST	#B'1000,R0
		BT	NOT_SOFT5
		MOV	DELACC2,R3
		MOV.B	@R3,R3
		BRA	JOG_JMP5
		NOP
NOT_SOFT5:
		MOV	DELDEC,R3
		MOV.B	@R3,R3
;IMPROVE6---------------------------------------
MOV WSTATUS7,R0
MOV.B @R0,R0
TST #B'10000,R0
BT  JOG_JMP5
MOV FR300,R3
;IMPROVE6---------------------------------------
JOG_JMP5:
		MOV.W	@R1,R0		;R1=ADDRESS OF FRUN
		SUB	R3,R0
		MOV.W	R0,@R1		;UPDATE FRUN
		BRA	T1_P2
		NOP
		
CHK_MSEC_D:	MOV	M_MSEC,R3
		MOV.W	@R3,R5
		MOV	ACCREMEND,R4
		MOV.W	@R4,R2
		MOV	CONST1,R0
		CMP/GT	R0,R2
		BF	T_P2
		SUB	R0,R2
		MOV.W	R2,@R4
		ADD	#-1,R5
		MOV.W	R5,@R3
		BRA	T1_P2
		NOP

T_P2:		MOV	STEPTIM,R2
		MOV.W	@R2,R0
		MOV	M_MSEC,R3
		MOV.W	@R3,R3
		MOV	R3,R4
		DIVS	R0,R3
		MOV.W	@R2,R0
		MULS	R0,R3
		STS	MACL,R0
		SUB	R4,R0
		CMP/EQ	#0,R0
		BF	T1_P2

DEC_FR:		MOV.W	@R1,R0
		ADD	#-1,R0
		MOV.W	R0,@R1

		MOV	ACCREMEND,R2
		MOV.W	@R2,R0
		MOV	REMENDER,R3
		MOV.W	@R3,R3
		ADD	R0,R3
		MOV.W	R3,@R2

T1_P2:		MOV.W	@R1,R0
		MOV	FSET_1,R2
		MOV.W	@R2,R2
		CMP/GT	R2,R0
		BT	T1_P3         ;IF FRUN(R0)>FSET(R2) JMP
		MOV.W	R2,@R1        ;ELSE STORE FSET(=0) TO FRUN

		MOV	RSTATUS,R2
		MOV.B	@R2,R0
		OR	#B'100,R0     ;SET STEADY STATE RUN FLG
		MOV.B	R0,@R2

		;MOV	PSTATUS1,R2
		;MOV.B	@R2,R0
		;AND	#B'11011111,R0   ;CLEAR DECEL TO STOP FLAG
		;MOV.B	R0,@R2

		BRA	T1_P4
		NOP
T1_P3:		
		MOV	RSTATUS,R2
		MOV.B	@R2,R0
		AND	#B'11111011,R0
		MOV.B	R0,@R2
T1_P4:
		BRA     OUT_ACCDEC
		NOP

		.ALIGN 4
INCRE:		.DATA.L INCREA_
FRUN_1:		.DATA.L FRUN
FSET_1:		.DATA.L FSET
ACCTIM:		.DATA.L ACC_TIM
DECTIM:		.DATA.L DEC_TIM
SYSFLG_1:	.DATA.L SYSFLG
CONST1:		.DATA.L 5000
STEPTIM:	.DATA.L STEP_TIM
REMENDER:	.DATA.L REM_DER
DELACC:		.DATA.L DEL_ACC
DELDEC:		.DATA.L	DEL_DEC
ACCREMEND:	.DATA.L ACC_REMEND
M_MSEC:		.DATA.L MMSEC
RSTATUS:	.DATA.L _R_STATUS
PSTATUS1:       .DATA.L _P_STATUS
WSTATUS7:       .DATA.L _W_STATUS
IDCOM:          .DATA.L _ISD_RATED
IDEST:		.DATA.L _IMR_EST
TTT_: 		.DATA.L 4000
ACCJTIM:	.DATA.L ACCJ_TIM
ACC2TIM:	.DATA.L ACC2_TIM
QSTATUS2:	.DATA.L _Q_STATUS
DELACCJ:	.DATA.L DEL_ACCJ
DELACC2:	.DATA.L DEL_ACC2
DECJTIM:	.DATA.L DECJ_TIM
DELDECJ:	.DATA.L DEL_DECJ
FR50:		.DATA.L 5000
FR300:          .DATA.L 30000
FLUX_COUNT1:    .DATA.L _FLUX_COUNT
OUT_ACCDEC:

