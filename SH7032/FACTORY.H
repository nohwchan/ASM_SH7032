;********************************************
;------FACTORY PARAMETER SETTING------------*
;********************************************
	MOV FAC_COUNT,R1
        MOV #62,R0
	MOV.B R0,@R1		;(FIRST TIME) SET COUNTER OF WRITING EEPROM 36 TIMES
	MOV #0,R0		;SHOW 0 ON PROGRAM 70
	MOV PROG70_DAT,R1
	MOV.W R0,@R1
BRA OUT_FAC_SET
NOP

PROGRAM:
        MOV FAC_COUNT,R1
	MOV.B @R1,R0		;GET COUNTER OF WRITING EEPROM

        CMP/EQ  #62,R0
	BF	FUNC_SET
	MOV	H50,R10
        MOV     #104,R11
	MOV 	EEWRITE,R14
	JSR 	@R14;EE_WR
	NOP
        MOV     #61,R0
	MOV	FAC_COUNT,R1
	MOV.B	R0,@R1
	BRA	OUT_FAC_SET
	NOP
FUNC_SET:

;        MOV FAC_COUNT,R1
;        MOV.B @R1,R0            ;GET COUNTER OF WRITING EEPROM
	MOV FUNC,R2
	MOV #61,R3
	SUB R0,R3		
	MOV R3,R11		;R11=36-COUNTER OF WRITING=ADDRESS OF EEPROM
	SHAL R3			
	ADD R3,R2		
	MOV.W @R2,R10 		;R10=DATA THAT WANT TO WRITE
	MOV EEWRITE,R14
	JSR @R14;EE_WR
	NOP

	MOV FAC_COUNT,R1
	MOV.B @R1,R0
	ADD #-1,R0
	MOV.B R0,@R1		;DECREASE FAC_COUNT 

	BRA OUT_FAC_SET
	NOP


	.ALIGN 4
;FAC_COUNT:	.DATA.L _FAC_COUNT
EEWRITE:	.DATA.L EE_WR
MASKLOW6:	.DATA.L B'0000000011111111
;EERD6:		.DATA.L EE_RD
FUNC:		.DATA.L FUNCTION
PROG70_DAT:	.DATA.L PROG_DAT
;	.ALIGN 2
;FUNCTION:	.DATA.W 256,0,12800,261,261,261,261,261,3,0
;		.DATA.W 0,7700,12840,17980,2640,0,257,0,0,768
;		.DATA.W 0,0,0,514,5632,6400,3072,3072,6400,5632
;		.DATA.W 256,0,0,6401,0,0
	.ALIGN 4
OUT_FAC_SET:

        MOV     FAC_COUNT,R1
	MOV.B   @R1,R0		;GET COUNTER OF WRITING EEPROM
	CMP/EQ  #0,R0		;IF THE LAST ADDRESS HAS ALREADY WRITTEN 
	BF	NOT_CHK_SUM	

        MOV     USTATU_S,R1	;THEN CHECK THAT IT IS TESTING OF EE ERR?
	MOV.B	@R1,R0
	TST	#B'1000000,R0	;IF IT IS EE ERR TESTING
	BT	NOT_CHK_SUM	
	AND	#B'10111111,R0	;THEN CLEAR TESTING EE ERR FLG
	MOV.B	R0,@R1
	MOV	SSTATU_S,R1
	MOV.B	@R1,R0
	AND	#B'11110011,R0	;CLEAR P_LOCK AND PASS MODE FLG
	MOV.B	R0,@R1	
	MOV	SYSFL_G,R1
	MOV.B	@R1,R0
	AND	#B'11111101,R0	;CLEAR P_MODE FLG
	MOV.B	R0,@R1
	MOV	#0,R10
	MOV	#127,R11
	MOV	EERD6,R14	;READ CHK_SUM VALUE
	JSR	@R14;EE_RD
	NOP
	MOV	CHKSUM,R14
	JSR	@R14;CHK_SUM
	NOP
	CMP/EQ	R8,R10		;IF CHK_SUM = CHK_SUM VALUE
	BT	NOT_CHK_SUM	;THEN NOT EE_ERROR
        MOV 	TIP_TYP02,R0
        MOV 	#7,R1		;set trip type = 7
        MOV.B 	R1,@R0
        MOV 	SYSFL_G,R1
	MOV.B 	@R1,R0
	OR  	#B'1000,R0	;set trip flag
	AND 	#B'11111000,R0	;set stop,not p_mode and blink mode
        MOV.B 	R0,@R1

        BRA     NOT_CHK_SUM
	NOP
	
	.ALIGN 4
CHKSUM:		.DATA.L CHK_SUM
FAC_COUNT:	.DATA.L _FAC_COUNT
EERD6:		.DATA.L EE_RD
USTATU_S:	.DATA.L _U_STATUS
SSTATU_S:	.DATA.L _S_STATUS
SYSFL_G:	.DATA.L SYSFLG
TIP_TYP02:	.DATA.L TIP_TYP
	.ALIGN 4
NOT_CHK_SUM:


	
