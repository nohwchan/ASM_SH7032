;********************************************
;----------PROGRAM SIZE OF INVERTER---------*
;********************************************
	MOV SFG,R1
	MOV.B @R1,R0
	OR  #B'1,R0		;CLEAR BLINK MODE FLAG
	MOV.B R0,@R1
	MOV S_STATUS7,R1
	MOV.B @R1,R0
	OR #B'1000000,R0	;SET PROGRAM SIZE FLAG
	MOV.B R0,@R1
PROG_SIZE:
	MOV VER,R1
	MOV.B @R1,R0		;GET ADDRESS OF VERSION
	MOV VERSION,R1
	ADD R0,R1
	MOV @R1,R10		;GET HP OF EACH VERSION
	MOV DATBUF,R11
	MOV R10,@R11
	MOV #5,R2
	MOV DOT,R1
	MOV.B R2,@R1
	MOV SCAN4,R14
	JSR @R14;SCAN		;SHOW HP
	NOP
	MOV KEY4,R14
	JSR @R14;KEYPROC	;SCAN KEYPAD
	NOP	
	MOV S_STATUS7,R1
	MOV.B @R1,R0
	TST #B'1000000,R0	;IF PROGRAM SIZE READY
	BF  NOT_SET		;THEN NOT_SIZE
	MOV VER,R1		;ELSE GET ADDRESS OF EACH VERSION
	MOV.B @R1,R0
	SHAR R0			;DIV 2 SINCE DATA OF CURRENT IS WORD (NOT LONG WORD)
	MOV CURRENT,R1
	ADD R0,R1
	MOV.W @R1,R10		;GET CURRENT VALUE OF INVERTER EACH VERSION
	MOV #100,R11
	MOV EEWRITE,R14		;WRITE INVERTER CURRENT IN EEPROM (#100)
	JSR @R14;EE_WR
	NOP

	MOV VER,R1		;ELSE GET ADDRESS OF EACH VERSION
	MOV.B @R1,R0
	SHAR R0			;DIV 2 SINCE DATA OF CURRENT IS WORD (NOT LONG WORD)
	MOV AMP_GAIN,R1
	ADD R0,R1
	MOV.W @R1,R10		;GET CURRENT VALUE OF INVERTER EACH VERSION
	MOV #62,R11
	MOV EEWRITE,R14		;WRITE INVERTER CURRENT IN EEPROM (#100)
	JSR @R14;EE_WR
	NOP

	MOV INT_PARA,R14	;INITIALIZE MOTOR PARAMETER IN EACH SIZE
	JSR @R14;INITIALIZE
	NOP

	MOV VER,R1		;WRITE VERSION OF INVERTER(220 OR 380 V.)
	MOV.B @R1,R10
	MOV #71,R11
	MOV EEWRITE,R14
	JSR @R14;EE_WR
	NOP

	MOV V150,R10		;INITIAL IQMAX LIMIT (150%)
	MOV #70,R11
	MOV EEWRITE,R14
	JSR @R14;EE_WR
	NOP

	MOV SFG,R1
	MOV.B @R1,R0
	AND #B'11111110,R0	;SET BLINK MODE FLAG
	MOV.B R0,@R1
	BRA OUT_PROG_SIZE
	NOP


;LOOP ABOUT 1ms FOR SCAN KEY AND DISPLAY
NOT_SET:
	MOV #0,R0
NO_LOOP:
	ADD #1,R0
	MOV V2500,R1
	CMP/EQ R1,R0
	BF  NO_LOOP
	BRA PROG_SIZE
	NOP

	.ALIGN 4
SFG:		.DATA.L SYSFLG
S_STATUS7:	.DATA.L _S_STATUS
VER:		.DATA.L _VER
DATBUF:		.DATA.L _DATA_BUF
DOT:		.DATA.L POINT
SCAN4:		.DATA.L SCAN
KEY4:		.DATA.L KEYPROC
VERSION:	.DATA.L HP
CURRENT:	.DATA.L AMP_INV
AMP_GAIN:	.DATA.L CURRENT_GAIN
V150:		.DATA.L 150
V2500:		.DATA.L 2500
INT_PARA:	.DATA.L INITIALIZE
HP:		.DATA.L H'4177205E,H'3B77205E,H'5B77205E,H'5E77205E
		.DATA.L H'4377205E,H'7741205E,H'5E41205E,H'773B205E
		.DATA.L H'5E3B205E,H'775B205E,H'774D205E,H'775E205E
		.DATA.L H'777E205E,H'5E43205E,H'7777415E,H'5E3B415E
		.DATA.L H'775E415E,H'5E43415E,H'77773B5E,H'775E3B5E
		.DATA.L H'77775B5E,H'407E205E,H'417E205E,H'3B7E205E
		.DATA.L H'5B7E205E,H'5E7E205E,H'437E205E,H'5F7E205E
		.DATA.L H'787E205E
	.ALIGN 2
AMP_INV:	.DATA.W 34,46,62,90,140,180,270,340,440,480
		.DATA.W 650,800,960,1280,1650,1890,2240,2650
		.DATA.W 3020,3780,4540,32,50,80,110,170,250,330,480
		;INVERTER CURRENT SCALE WITH 10
	.ALIGN 2
;CURRENT_GAIN:	.DATA.W 8770,6559,4865,3345,2154,1679,1117,887,685,628
;		.DATA.W 464,377,314,235,183,159,134,114,100
;		;CURRENT GAIN OF IUV2DQ(ONLY 1HP TO 10 HP)
CURRENT_GAIN:	.DATA.W 106,144,183,250,440,506,832,1028,1356,1496
		.DATA.W 2002,2465,2958,3944,5084,5823,6902,8165,9305,9999,9999
		.DATA.W 106,154,246,339,524,770,1016,1479
		;CURRENT GAIN OF IUV2DQ(ONLY 1HP TO 10 HP)
	.ALIGN 4
OUT_PROG_SIZE:
	
