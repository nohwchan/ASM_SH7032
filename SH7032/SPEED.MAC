        .EXPORT SPD_CAL
        .EXPORT _IMIA2,_OVI2
        .INCLUDE "MACRO.H"                              ;(MUL,DIV)
        .INCLUDE "RAM_IMP.H"                            
	.SECTION SPEED,CODE,ALIGN=4

;*************************************************************************
;	SPEED CALCULATION (FROM ENCODER USING FIX TIME METHOD)
;
;	OUTPUT : 
;		R10 = ROTOR SPEED		(rad/s)	
;		R2  = ROTOR POSITION		(4096 per a round)
;*************************************************************************
SPD_CAL:
	STS.L	PR,@-SP
	MOV	MASKER,R11

	MOV     TCNT2_,R10			;UP/DOWN COUNTER
	MOV.W	@R10,R0

	AND     R11,R0				;R0=RPOS AT THIS SAMPLING TIME   

	MOV	RPOS_4,R5			;POP OUT THE Ts(K-4) ROTOR 
	MOV	@R5,R4				;POSITION 

	MOV	RPOS_3,R6			;POP OUT THE Ts(K-3) ROTOR 
	MOV	@R6,R3				;POSITION 

	MOV	RPOS_2,R7			;POP OUT THE Ts(K-2) ROTOR 
	MOV	@R7,R2				;POSITION 

	MOV	RPOS_1,R8			;POP OUT THE Ts(K-1) ROTOR 
	MOV	@R8,R1				;POSITION 

	MOV	R3,@R5				;UPDATE RPOS_4
	MOV	R2,@R6				;UPDATE RPOS_3
	MOV	R1,@R7				;UPDATE RPOS_2
	MOV	R0,@R8				;UPDATE RPOS_1

	MOV     R0,R5                           
	MOV	R0,R7				;FIELD WEAK
        SUB     R1,R5                           ;R5=RPOS(k)-RPOS(k-1)

	SUB	R4,R0				;R0=RPOS(k)-RPOS(k-4)
	SUB	R1,R7				;FIELD WEAK

	MOV	UCHK,R1				;R1=160
	MOV.W	@R1,R1
		
;	MOV	LCHK,R2				;R2=-160
	NEG	R1,R2

	MOV	MXRPOS,R3			;R3=4096
	MOV.W	@R3,R3

	CMP/GT	R1,R5
	BT	RE_VSE
	CMP/GT	R5,R2
	BF	OUTWM
	ADD	R3,R5				;R0=RPOS(k)-RPOS(k-1)+4096
	BRA	OUTWM
	NOP

RE_VSE:  
	SUB	R3,R5				;R0=RPOS(k)-RPOS(k-1)-4096
OUTWM:
MOV	R0,R4
CMP/EQ	#0,R0
BF	CHK_FWD
MOV	SYFLG,R10
MOV.B	@R10,R0		
TST	#B'100,R0	;CHK RUN OR NOT
BT	STP_M
ADD	#1,R10		;RUN MODE
MOV.B	@R10,R0
TST	#B'100,R0	;CHK VF OR NOT
BF	CHK_FWD
TST	#B'10,R0
BF	CHK_FWD
MOV	RSTATUS,R10	;VT 
MOV.B	@R10,R0
TST	#B'100000,R0	;BREAK OR NOT
BF	CHK_FWD		
MOV	F_RUN,R10
MOV.W   @R10,R0
CMP/EQ  #0,R0
BT	CHK_FWD
MOV	P_DLY,R10
MOV.W	@R10,R0
MOV	D500,R6
CMP/EQ	R6,R0
BT	TIP_PL
ADD	#1,R0
MOV.W	R0,@R10
BRA	CHK_FWD
NOP
TIP_PL:
MOV	#0,R0
MOV.W	R0,@R10
;MOV	TIPTYPE,R10		;MASK FOR NO PL TRIP
;MOV	#15,R0			;
;MOV.B	R0,@R10			;
BRA	CHK_FWD
NOP
STP_M:
MOV	P_DLY,R10
MOV	#0,R0
MOV.B	R0,@R10
CHK_FWD:
        MOV     F_RUN,R10                       ;FIELD WEAK
	MOV.W	@R10,R10
	MOV	FMAX,R12
	MOV.W	@R12,R12
	CMP/GT	R12,R10
	BF	LOW_SPEED
	MOV	R7,R4
LOW_SPEED:

        MOV     R4,R0
	CMP/GT	R1,R0
	BT	REVSE
	CMP/GT	R0,R2
	BF	OUT_WM
FORWD:
	ADD	R3,R0				;R0=RPOS(k)-RPOS(k-1)+4096
	BRA	OUT_WM
	NOP

REVSE:  
	SUB	R3,R0				;R0=RPOS(k)-RPOS(k-1)-4096
OUT_WM:

	MOV	WMSCAL,R10			;R10=2pi/(4096*4Ts)*2^6*2^4
	MOV.W	@R10,R10
	MULS	R10,R0
	STS	MACL,R10			;R10=ROTOR SPEED
	SHAR    R10
	SHAR    R10
	SHAR    R10
	SHAR    R10

        MOV     F_RUN,R3                        ;FIELD WEAK
	MOV.W	@R3,R3
	MOV	FMAX,R12
	MOV.W	@R12,R12
	CMP/GT	R12,R3
	BF	LOW_SPEED1
	SHAL	R10
        SHAL    R10
LOW_SPEED1:

	MOV	RPOS_1,R12
	MOV	@R12,R2				;R2=ROTOR POSITION	

	MOV	PV,R12
        MOV     @R12,R1
        MOV     R5,R3

	SHAL	R3
	BF	POS_V	
	NEG	R5,R5
POS_V:
        ADD     R1,R5
	MOV	R5,@R12

	LDS.L	@SP+,PR
	RTS
	NOP
        .ALIGN 4
MASKER: .DATA.L H'FFFF
RPOS_6:	.DATA.L _RPOS_4
RPOS_5:	.DATA.L _RPOS_2
RPOS_4:	.DATA.L _RPOS_4
RPOS_3:	.DATA.L _RPOS_3
RPOS_2:	.DATA.L _RPOS_2
RPOS_1:	.DATA.L _RPOS_1
UCHK:	.DATA.L _UCHK;614			;1500/60*1E-3*4096*6=614.4
;LCHK:	.DATA.L -614
MXRPOS:	.DATA.L PULSE;4096
WMSCAL: .DATA.L _WMSCL;393      		;2*pi/(4096*4*1e-3)*2^6*2^4
TCNT2_: .DATA.L H'5FFFF1C
PV:	.DATA.L P_V
SYFLG:	.DATA.L	SYSFLG
RSTATUS:.DATA.L _R_STATUS
TIPTYPE:.DATA.L TIP_TYP
P_DLY:	.DATA.L	PULSE_DLY
D500:	.DATA.L 4;500
F_RUN:  .DATA.L FRUN
FMAX:   .DATA.L _F_MAX

_OVI2:
                MOV     R0,@-SP
		MOV	R1,@-SP
		MOV	R2,@-SP
		STS.L	PR,@-SP
		MOV	TSR2,R2
                MOV.B   @R2,R1
		MOV	#H'F8,R0
		MOV.B	R0,@R2			;RESET OVER/UNDER FLOW BIT
	
		MOV	TCNT2,R0
		MOV	MAXANG1,R2		;SET TIMER COUNTER 2 TO 4095
		MOV.W	@R2,R2
		ADD	#-1,R2
		MOV.W	R2,@R0			;AFTER UNDERFLOW HAVE OCCURED 

	        ;MOV     ROUND1,R1
        	;MOV     @R1,R0
	        ;ADD     #1,R0
		;CMP/EQ	#6,R0
		;BT	OUT_INT
	        ;MOV     R0,@R1
OUT_INT:
		LDS.L	@SP+,PR
		MOV	@SP+,R2
		MOV	@SP+,R1
		MOV	@SP+,R0
		RTE
                NOP

_IMIA2:
                MOV     R0,@-SP
		MOV	R1,@-SP
		MOV	R2,@-SP
		STS.L	PR,@-SP
		MOV	TSR2,R2
                MOV.B   @R2,R1
		MOV	#H'F8,R0
		MOV.B	R0,@R2			;RESET OVER/UNDER FLOW AND 
						;IMFA BIT
		MOV	TCNT2,R0
		MOV	STRANG,R2		;SET TIMER COUNTER2 TO 1
		MOV.W	R2,@R0			;AFTER GRA2 COMPARE MATCH 

	        ;MOV     ROUND1,R1
        	;MOV     @R1,R0
	        ;ADD     #1,R0
		;CMP/EQ	#6,R0
		;BT	OUT_INT1
	        ;MOV     R0,@R1
OUT_INT1:

		LDS.L	@SP+,PR
		MOV	@SP+,R2
		MOV	@SP+,R1
		MOV	@SP+,R0
		RTE
                NOP

        .ALIGN  4
MAXANG1:.DATA.L PULSE;4095
STRANG: .DATA.L 1
ROUND1: .DATA.L ROUND
        .INCLUDE "ADDRESS.H"
        .END
