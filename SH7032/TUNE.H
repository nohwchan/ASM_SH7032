;********************************************
;---------------AUTO TUNNING----------------*
;********************************************
	MOV TSTATUS3,R1
	MOV.B @R1,R0
	TST #B'100,R0		;IF TUNNING FLAG  SET
	BF  TUNE1		;THEN TUNE1 

	TST #B'10000,R0
	BF  TUNE0
	BRA OUT_TUNNING
	NOP
TUNE0:
;	MOV FRUNT,R2
;	MOV.W @R2,R0
;	CMP/EQ #0,R0
	MOV SYSFLGT,R2
	MOV.B @R2,R0
	TST #B'100,R0
	BF TUNE6
	MOV.B @R1,R0
	AND #B'11101111,R0
	OR  #B'1000000,R0
	MOV.B R0,@R1

MOV #0,R10
MOV #58,R11
MOV EEWRITE2,R14
JSR @R14;EE_WR
NOP

	MOV PARAMETER,R14
	JSR @R14;PARA_SET
	NOP
            MOV #0,R10
            MOV #104,R11
	    MOV EEREAD,R14
            JSR @R14;EE_RD
            NOP
	MOV FLASTT,R1
	MOV.W R10,@R1
TUNE6:
	BRA OUT_TUNNING
	NOP
	

TUNE1:
	TST #B'1000,R0		;IF Rs TUNE FLAG NOT SET
	BT  TUNE4		;THEN TUNE OTHER PARAMETER
	MOV DUTY,R1
	MOV.W @R1,R0		
	CMP/EQ #0,R0		;IF DUTY = 0 (FIRST TIME)
	BF  NOT_0_DUTY		
	MOV #50,R0		;THEN DUTY = 100(DUTY=4)
	MOV.W R0,@R1
NOT_0_DUTY:

	MOV BRK_T,R2
	MOV A1000,R3
	MOV.W R3,@R2		;SET BREAK TIME = 1000 ms
	MOV BRK_C,R4		
	MOV.W @R4,R5		;GET BREAK COUNTER
	CMP/GE R3,R5		;IF BREAK COUNTER > BREAK TIME
	BT TUNE2		;THEN TUNE2
	BRA OUT_TUNNING		
	NOP
TUNE2:

	MOV V3409,R6		;ELSE CALCULATE Rs
	MULS R6,R0
	STS MACL,R7
	MOV RMS_AMP,R8
	MOV @R8,R8
	DIVS R8,R7		;R7=3409*DUTY/I_RMS
	MOV R_STATOR,R8
	MOV.W @R8,R9		;R9=ACCUMULATE Rs
	ADD R9,R7		;R7=R7+R9
	MOV.W R7,@R8
	ADD #25,R0		;INCREASE DUTY
	MOV.W R0,@R1
	MOV #0,R5		
	MOV.W R5,@R4		;CLEAR BREAK COUNTER
	MOV A125,R10
	CMP/GE R10,R0		;IF DUTY < 175
	BT  TUNE3		;THEN OUT_TUNNING
	BRA OUT_TUNNING
	NOP
TUNE3:

	MOV R_STATOR,R8		;ELSE CALCULATE Rs AVERAGE
	MOV.W @R8,R0
	MOV #3,R9
	DIVS R9,R0
	MOV.W R0,@R8		;STORE RSTATOR
	MOV.W R5,@R1		;CLEAR DUTY
	MOV.W R5,@R2		;CLEAR BREAK TIME			
	MOV TSTATUS3,R1
	MOV.B @R1,R0
	AND #B'11110111,R0	;CLEAR Rs TUNE FLAG
	MOV.B R0,@R1

TUNE4:
	MOV FLASTT,R1
;	MOV A5000,R0
	MOV FRE_TUNE,R0
	MOV.W @R0,R0
	MOV.W R0,@R1		;SET FLAST = 10 Hz
	MOV FRUNT,R1
	MOV.W @R1,R1
	CMP/EQ R0,R1		;IF FRUN = 10 Hz
	BT  TUNE5		;THEN TUNE5
	BRA OUT_TUNNING
	NOP
TUNE5:

	MOV RMS_AMP,R1
	MOV @R1,R2
	MOV V23284,R3
	DIVS R2,R3
	MOV L_STATOR,R2
	MOV.W R3,@R2		;R3=Ls=23284/Inolad
	MOV R3,R4
	MOV #10,R2
	DIVS R2,R4
	MOV SIGMA_L,R2
	MOV.W R4,@R2		;R4=pLs=0.1Ls
	SUB R4,R3
	MOV L_ROTOR,R2
	MOV.W R3,@R2		;R3=Lr=Ls-0.1Ls
	MOV R3,R8		;R8=R3	


            MOV #0,R10
            MOV #57,R11
	    MOV EEREAD,R14
            JSR @R14;EE_RD
            NOP
;            MOV MASKLOW,R1
;            AND R1,R10
            MOV V3000,R6
	    MOV POLE,R2
	    MOV.B @R2,R2
	    SHAR R2
	    DIVS R2,R6
            SUB R10,R6          ;R6=SYNCHRONOUS SPEED-RATED SPEED

	MOV RMS_AMP,R2
	MOV @R2,R2
	MOV V192,R5
	MULS R2,R5
	STS MACL,R5
	MOV V100,R2
	DIVS R2,R5
	MOV ISD_RATED,R2
	MOV R5,@R2		;R5=Isd(SCALE 64)
	MOV IMOTORT,R2
	MOV @R2,R2
	MOV V192,R1
	MULS R1,R2
	STS MACL,R1
	MOV V100,R2
	DIVS R2,R1
	MULS R1,R1
	STS MACL,R1		;R1=(IRATED*SQRT(3))^2 SCALE 64
	MULS R5,R5
	STS MACL,R7		;R7=Isd^2
	SUB R7,R1		;R1=R1-R7
	SHAR R1
	SHAR R1			;SCALE DOWN FOR SQROOT
	SHAR R1
	SHAR R1
	SHAR R1
	SHAR R1
	SHAR R1
	SHAR R1

	MOV SQROOTT,R14
	JSR @R14;SQ_ROOT
	NOP	
	SHAL R13		;SCALE UP 
	SHAL R13
	SHAL R13
	SHAL R13
	MOV ISQ_RATED,R1
	MOV R13,@R1		;R13=Isq
	
	MULS R8,R5		
	STS MACL,R5		
	DIVS R13,R5		;R5=Isd*Lr/Isq
	MULS R6,R5		
	STS MACL,R5		;R5=(Isd*Lr/Isq)*wsl
	MOV V1256,R13		;R13=4*PI(SCALE 100)=1256
	MULS R13,R5
	STS MACL,R5		;R5={(Isd*Lr/Isq)*wsl}*1256
	MOV V6000,R13		
	DIVS R13,R5		;R5=[{(Isd*Lr/Isq)*wsl}*1256]/6000
	MOV R_ROTOR,R1
	MOV.W R5,@R1		;R5=Rr

	MOV L_ROTOR,R1
	MOV.W @R1,R8
	MOV TR,R1
	DIVS R8,R5
	MOV.W R5,@R1
	SHAL R5
	SHAL R5
	SHAL R5
	SHAL R5
	SHAL R5
	SHAL R5
	MOV RL,R1
	MOV.W R5,@R1

	MOV SIGMA_L,R8
	MOV.W @R8,R8
	MOV R_STATOR,R5
	MOV.W @R5,R5
	MOV TS,R1
	DIVS R8,R5
	MOV.W R5,@R1

	MOV PARANORM,R14
	JSR @R14;NORMLIZE
	NOP

	MOV FSETT,R1
	MOV #0,R0
	MOV.W R0,@R1		;CLEAR FSET
	MOV PSTATUST,R1
	MOV.B @R1,R0
	OR #B'100000,R0		;SET DCT FLAG
	MOV.B R0,@R1

        MOV TSTATUS3,R1
	MOV.B @R1,R0
	AND #B'11111011,R0	;CLEAR AUTO TUNE FLAG		
	MOV.B R0,@R1

;	MOV PARAMETER,R14
;	JSR @R14;PARA_SET
;	NOP

	BRA OUT_TUNNING
	NOP

	.ALIGN 4
TSTATUS3:	.DATA.L _T_STATUS
SYSFLGT:	.DATA.L SYSFLG
DUTY:		.DATA.L _DUTYS
BRK_T:		.DATA.L _BRK_TIME
BRK_C:		.DATA.L _BRK_COUNT
A125:		.DATA.L 125
V3409:		.DATA.L 3409;{SQRT(2/3)*540*100*1000/(SQRT(3)*2489*3)}    ;3 IS DELTA MODEL
R_STATOR:	.DATA.L _R_STATOR
RMS_AMP:	.DATA.L I_RMS
FLASTT:		.DATA.L FLAST
A1000:		.DATA.L 1000
A5000:		.DATA.L 1000
FRE_TUNE:	.DATA.L _FRE_TUNE
B5000:		.DATA.L 5000
V3000:          .DATA.L 3000
FRUNT:		.DATA.L FRUN
V23284:		.DATA.L 23284
L_STATOR:	.DATA.L _L_STATOR
SIGMA_L:	.DATA.L _SIGMA_L
L_ROTOR:	.DATA.L _L_ROTOR
MASKLOW:	.DATA.L B'0000000011111111
V192:		.DATA.L 192
V100:		.DATA.L 100
ISD_RATED:	.DATA.L _ISD_RATED
ISQ_RATED:	.DATA.L _ISQ_RATED
IMOTORT:	.DATA.L I_MOTOR
V1256:		.DATA.L 1256
V6000:		.DATA.L 6000
R_ROTOR:	.DATA.L _R_ROTOR
PSTATUST:	.DATA.L _P_STATUS
FSETT:		.DATA.L FSET
SQROOTT:	.DATA.L SQ_ROOT
EEREAD:		.DATA.L EE_RD
EEWRITE2:	.DATA.L EE_WR
PARAMETER:	.DATA.L PARA_SET
TS:		.DATA.L STATOR_T
TR:		.DATA.L	ROTOR_T
RL:		.DATA.L	R_L
PARANORM:	.DATA.L	NORMALIZE
POLE:           .DATA.L _POLE
        .ALIGN 4
OUT_TUNNING:
	
