;----------SIMULATION SIGNAL FOR TEST MULTI SPEED--------
;	MOV SEC2,R1
;	MOV.W @R1,R1
;	MOV R1,R2
;	MOV #31,R3
;	MOV R3,R4
;	DIVS R3,R2
;	MULS R2,R4
;	STS  MACL,R2
;	NEG  R2,R2
;	ADD  R2,R1
;	MOV #7,R2
;	CMP/GT R2,R1
;	BF  NOX
;	MOV #15,R2
;	CMP/GT R2,R1
;	BF  X1
;	MOV #23,R2
;	CMP/GT R2,R1
;	BF  XJOG
;	MOV #B'100,R0
;	BRA BEGIN
;	NOP
;NOX:
;	MOV #B'0,R0
;	BRA BEGIN
;	NOP
;XJOG:   MOV JOGBIT1,R0
;	BRA BEGIN
;	NOP
;X1:
;	MOV #B'1000,R0
;---------------------------------------------------
;FLYINGA
MOV WSTATUS6,R1
MOV.B @R1,R0
TST #B'1000,R0
BF  RE_FLAST
;FLYINGA

        MOV INP_HI,R1
	MOV.B @R1,R0		;INPORT HIGH BYTE OF EXTERNAL(FOR JOG CHECKING)

BEGIN:  
	TST #B'100000,R0	;TEST JOG(0 OR 1)
	BT  JOG			;IF JOG IN(JOG=0) THEN JMP TO JOG

	MOV QSTATUS1,R1
	MOV.B @R1,R2
	MOV #B'11111011,R3
	AND R3,R2
	MOV.B R2,@R1		;CLEAR JOG FLAG

	MOV INP_LO,R1
	MOV.W @R1,R0

	TST #B'1,R0		;TEST SOFT IN ?
	BF  CLEAR_SOFT		;IF NO SOFT IN THEN CLEAR SOFT FLAG
	MOV QSTATUS1,R1
	MOV.B @R1,R2
	MOV #B'1000,R3
	OR  R3,R2
	MOV.B R2,@R1		;SET SOFT FLAG

	BRA TEST_X
	NOP
CLEAR_SOFT:
	MOV QSTATUS1,R1
	MOV.B @R1,R2
	MOV #B'11110111,R3
	AND R3,R2
	MOV.B R2,@R1		;CLEAR SOFT FLAG

TEST_X:
	MOV MASKBIT,R1
	AND R1,R0		;MASK BIT FOR CHECK X1,X2,X3
	SHLR R0			;SHIFT BIT X1,X2,X3 FOR CHECK(0-6)
	CMP/EQ #0,R0
	BT SPEED7
	CMP/EQ #1,R0
	BT SPEED3
	CMP/EQ #2,R0
	BT SPEED5
	CMP/EQ #3,R0
	BT SPEED1
	CMP/EQ #4,R0
	BT SPEED6
	CMP/EQ #5,R0
	BT SPEED2
	CMP/EQ #6,R0
	BT SPEED4

RE_FLAST:
	MOV FLAST_2,R1
	MOV.W @R1,R1
	MOV FSET_3,R0
	MOV.W R1,@R0

	MOV RSTATUS2,R1
	MOV.B @R1,R0
	AND  #B'01111111,R0
	MOV.B R0,@R1		;CLEAR EXTERNAL SPEED FLAG 

	BRA OUT_MUL
	NOP
SPEED7:
	MOV MUL_SP7,R1		;CHANGE FSET = MUL_SP7
	MOV.W @R1,R0
	MOV FSET_3,R1
	MOV.W R0,@R1
	MOV RSTATUS2,R1
	MOV.B @R1,R0
	OR  #B'10000000,R0
	MOV.B R0,@R1		;SET EXTERNAL SPEED FLAG 
	BRA OUT_MUL
	NOP
SPEED3:
	MOV MUL_SP3,R1		;CHANGE FSET = MUL_SP3
	MOV.W @R1,R0
	MOV FSET_3,R1
	MOV.W R0,@R1
	MOV RSTATUS2,R1
	MOV.B @R1,R0
	OR  #B'10000000,R0
	MOV.B R0,@R1		;SET EXTERNAL SPEED FLAG 
	BRA OUT_MUL
	NOP

SPEED5:
	MOV MUL_SP5,R1		;CHANGE FSET = MUL_SP5
	MOV.W @R1,R0
	MOV FSET_3,R1
	MOV.W R0,@R1
	MOV RSTATUS2,R1
	MOV.B @R1,R0
	OR  #B'10000000,R0
	MOV.B R0,@R1		;SET EXTERNAL SPEED FLAG 
	BRA OUT_MUL
	NOP

SPEED1:
	MOV MUL_SP1,R1		;CHANGE FSET = MUL_SP1
	MOV.W @R1,R0
	MOV FSET_3,R1
	MOV.W R0,@R1
	MOV RSTATUS2,R1
	MOV.B @R1,R0
	OR  #B'10000000,R0
	MOV.B R0,@R1		;SET EXTERNAL SPEED FLAG 
	BRA OUT_MUL
	NOP

SPEED6:
	MOV MUL_SP6,R1		;CHANGE FSET = MUL_SP6
	MOV.W @R1,R0
	MOV FSET_3,R1
	MOV.W R0,@R1
	MOV RSTATUS2,R1
	MOV.B @R1,R0
	OR  #B'10000000,R0
	MOV.B R0,@R1		;SET EXTERNAL SPEED FLAG 
	BRA OUT_MUL
	NOP

SPEED2:
	MOV MUL_SP2,R1		;CHANGE FSET = MUL_SP2
	MOV.W @R1,R0
	MOV FSET_3,R1
	MOV.W R0,@R1
	MOV RSTATUS2,R1
	MOV.B @R1,R0
	OR  #B'10000000,R0
	MOV.B R0,@R1		;SET EXTERNAL SPEED FLAG 
	BRA OUT_MUL
	NOP

SPEED4:		
	MOV MUL_SP4,R1		;CHANGE FSET = MUL_SP4
	MOV.W @R1,R0
	MOV FSET_3,R1
	MOV.W R0,@R1
	MOV RSTATUS2,R1
	MOV.B @R1,R0
	OR  #B'10000000,R0
	MOV.B R0,@R1		;SET EXTERNAL SPEED FLAG 
	BRA OUT_MUL
	NOP

JOG:	
	MOV JOG_SP,R1
	MOV.W @R1,R0
	MOV FSET_3,R1
	MOV.W R0,@R1
	MOV RSTATUS2,R1
	MOV.B @R1,R0
	OR  #B'10000000,R0
	MOV.B R0,@R1		;SET EXTERNAL SPEED FLAG 
	
	MOV QSTATUS1,R1
	MOV.B @R1,R0
	OR  #B'100,R0
	MOV.B R0,@R1		;SET JOG FLAG ON

	BRA OUT_MUL
	NOP

		.ALIGN 4
INP_LO:		.DATA.L INPORT	
INP_HI:		.DATA.L IN_PORT2
SFLG1:		.DATA.L SYSFLG
FSET_3:		.DATA.L FSET
FLAST_2:	.DATA.L FLAST
PSTATUS3:	.DATA.L _P_STATUS
RSTATUS2:	.DATA.L _R_STATUS
QSTATUS1:	.DATA.L _Q_STATUS
WSTATUS6:       .DATA.L _W_STATUS
MUL_SP1:        .DATA.L _MUL_SP1
MUL_SP2:	.DATA.L _MUL_SP2
MUL_SP3:	.DATA.L _MUL_SP3
MUL_SP4:	.DATA.L _MUL_SP4
MUL_SP5:	.DATA.L _MUL_SP5
MUL_SP6:	.DATA.L _MUL_SP6
MUL_SP7:	.DATA.L _MUL_SP7
JOG_SP:		.DATA.L _JOG_SP
SEC2:		.DATA.L SEC
MASKBIT:	.DATA.L B'0000000000001110
OUT_MUL:
